from telegram import Update, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemovefrom telegram.ext import ContextTypes, ConversationHandler, CommandHandler, MessageHandlerfrom telegram.ext.filters import TEXT, COMMAND, VIDEO, ALL, CONTACTfrom asgiref.sync import sync_to_asyncfrom bot.utils.db import get_user_detailsCONTACT_STATE = range(1)async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):    button = KeyboardButton("Отправить", request_contact=True)    reply_markup = ReplyKeyboardMarkup([[button]], one_time_keyboard=True)    await update.message.reply_text("Пожалуйста отправьте номер телефона", reply_markup=reply_markup)    return CONTACT_STATEasync def contact_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):    phone = update.message.contact.phone_number    if not phone.startswith("+"):        phone = "+" + phone    await update.message.reply_text(f"Спасибо! Ваш номер телефона: {phone}", reply_markup=ReplyKeyboardRemove())    user_details = await get_user_details(phone=phone, active=True)    if user := user_details.get("user"):        user.chat_id = update.message.chat_id        await sync_to_async(user.save)()        await update.message.reply_text("Нажмите /help для продолжения")    else:        await update.message.reply_text("Не смог вас найти в базе!")    return ConversationHandler.ENDasync def other_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):    await update.message.reply_text("Без номера телефона я не могу вас опознать, пожалуйста нажмите на кнопку отправить")    return CONTACT_STATEstart_conversation_handler = ConversationHandler(    entry_points=[CommandHandler("start", start)],    states={        CONTACT_STATE: [MessageHandler(CONTACT, contact_handler),                        MessageHandler(ALL, other_handler)],    },    fallbacks=[],)